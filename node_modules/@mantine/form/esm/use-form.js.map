{"version":3,"file":"use-form.js","sources":["../src/use-form.ts"],"sourcesContent":["import { useState } from 'react';\nimport { formList, isFormList, FormList } from './form-list/form-list';\nimport { validateValues, validateFieldValue } from './validate-values/validate-values';\nimport { filterErrors } from './filter-errors/filter-errors';\nimport { getInputOnChange } from './get-input-on-change/get-input-on-change';\nimport { getErrorPath } from './get-error-path/get-error-path';\nimport type {\n  FormErrors,\n  FormRules,\n  FormValidationResult,\n  FormFieldValidationResult,\n  GetInputProps,\n  GetInputPropsFieldType,\n} from './types';\n\nexport interface UseFormInput<T> {\n  initialValues: T;\n  initialErrors?: FormErrors;\n  validate?: FormRules<T>;\n  schema?: (values: Record<string, any>) => FormErrors;\n}\n\nexport interface UseFormReturnType<T> {\n  values: T;\n  setValues: React.Dispatch<React.SetStateAction<T>>;\n  setFieldValue: <K extends keyof T, V extends T[K]>(field: K, value: V) => void;\n  errors: FormErrors;\n  setErrors: React.Dispatch<React.SetStateAction<FormErrors>>;\n  setFieldError: <K extends keyof T>(field: K, error: React.ReactNode) => void;\n  clearFieldError: <K extends keyof T>(field: K) => void;\n  clearErrors(): void;\n  setListItem: <K extends keyof T, V extends T[K]>(\n    field: K,\n    index: number,\n    value: V extends FormList<infer U> ? U : never\n  ) => void;\n  addListItem: <K extends keyof T, V extends T[K]>(\n    field: K,\n    payload: V extends FormList<infer U> ? U : never\n  ) => void;\n  removeListItem: <K extends keyof T>(field: K, indices: number[] | number) => void;\n  reorderListItem: <K extends keyof T>(field: K, payload: { from: number; to: number }) => void;\n  validate(): FormValidationResult;\n  validateField: (field: string) => FormFieldValidationResult;\n  onSubmit(\n    handleSubmit: (values: T, event: React.FormEvent) => void\n  ): (event?: React.FormEvent) => void;\n  reset(): void;\n  getInputProps: <K extends keyof T, L extends GetInputPropsFieldType = 'input'>(\n    field: K,\n    options?: { type?: L; withError?: boolean }\n  ) => GetInputProps<L>;\n\n  getListInputProps: <\n    K extends keyof T,\n    U extends T[K],\n    L extends GetInputPropsFieldType = 'input'\n  >(\n    field: K,\n    index: number,\n    listField: U extends FormList<infer V> ? keyof V : never,\n    options?: { type?: L; withError?: boolean }\n  ) => GetInputProps<L>;\n}\n\nexport function useForm<T extends { [key: string]: any }>({\n  initialValues,\n  initialErrors,\n  validate: rules,\n  schema,\n}: UseFormInput<T>): UseFormReturnType<T> {\n  const [errors, setErrors] = useState(filterErrors(initialErrors));\n  const [values, setValues] = useState(initialValues);\n\n  const clearErrors = () => setErrors({});\n  const setFieldError = (field: keyof T, error: React.ReactNode) =>\n    setErrors((current) => ({ ...current, [field]: error }));\n\n  const clearFieldError = (field: keyof T) =>\n    setErrors((current) => {\n      const clone: any = { ...current };\n      delete clone[field];\n      return clone;\n    });\n\n  const setFieldValue = <K extends keyof T, V extends T[K]>(field: K, value: V) => {\n    setValues((currentValues) => ({ ...currentValues, [field]: value }));\n    clearFieldError(field);\n  };\n\n  const setListItem = <K extends keyof T, V extends T[K]>(\n    field: K,\n    index: number,\n    value: V[K][number]\n  ) => {\n    const list = values[field];\n    if (isFormList(list) && list[index] !== undefined) {\n      const cloned = [...list];\n      cloned[index] = value;\n      setFieldValue(field, formList(cloned) as any);\n    }\n  };\n\n  const removeListItem = <K extends keyof T>(field: K, indices: number[] | number) => {\n    const list = values[field];\n\n    if (isFormList(list)) {\n      setFieldValue(\n        field,\n        formList(\n          list.filter((_: any, index: number) =>\n            Array.isArray(indices) ? !indices.includes(index) : indices !== index\n          )\n        ) as any\n      );\n    }\n  };\n\n  const addListItem = <K extends keyof T, V extends T[K]>(field: K, payload: V[number]) => {\n    const list = values[field];\n\n    if (isFormList(list)) {\n      setFieldValue(field, formList([...list, payload]) as any);\n    }\n  };\n\n  const reorderListItem = <K extends keyof T>(\n    field: K,\n    { from, to }: { from: number; to: number }\n  ) => {\n    const list = values[field];\n\n    if (isFormList(list) && list[from] !== undefined && list[to] !== undefined) {\n      const cloned = [...list];\n      const item = list[from];\n\n      cloned.splice(from, 1);\n      cloned.splice(to, 0, item);\n      setFieldValue(field, formList(cloned) as any);\n    }\n  };\n\n  const validate = () => {\n    const results = validateValues(schema || rules, values);\n    setErrors(results.errors);\n    return results;\n  };\n\n  const validateField = (field: string) => {\n    const results = validateFieldValue(field, schema || rules, values);\n    results.hasError ? setFieldError(field, results.error) : clearFieldError(field);\n    return results;\n  };\n\n  const onSubmit =\n    (handleSubmit: (values: T, event: React.FormEvent) => void) => (event: React.FormEvent) => {\n      event.preventDefault();\n      const results = validate();\n      !results.hasErrors && handleSubmit(values, event);\n    };\n\n  const reset = () => {\n    setValues(initialValues);\n    clearErrors();\n  };\n\n  const getInputProps = <\n    K extends keyof T,\n    U extends T[K],\n    L extends GetInputPropsFieldType = 'input'\n  >(\n    field: K,\n    { type, withError = true }: { type?: L; withError?: boolean } = {}\n  ): GetInputProps<L> => {\n    const value = values[field];\n    const onChange = getInputOnChange<U>((val: U) => setFieldValue(field, val)) as any;\n\n    const payload: any = type === 'checkbox' ? { checked: value, onChange } : { value, onChange };\n\n    if (withError && errors[field as any]) {\n      payload.error = errors[field as any];\n    }\n\n    return payload as any;\n  };\n\n  const getListInputProps = <\n    K extends keyof T,\n    U extends T[K][number],\n    LK extends keyof U,\n    L extends GetInputPropsFieldType = 'input'\n  >(\n    field: K,\n    index: number,\n    listField: LK,\n    { type, withError = true }: { type?: L; withError?: boolean } = {}\n  ): GetInputProps<L> => {\n    const list = values[field];\n\n    if (isFormList(list) && list[index] && listField in list[index]) {\n      const listValue = list[index];\n      const value = listValue[listField];\n      const onChange = getInputOnChange<U[LK]>((val: U[LK]) =>\n        setListItem(field, index, { ...listValue, [listField]: val })\n      ) as any;\n      const payload: any = type === 'checkbox' ? { checked: value, onChange } : { value, onChange };\n      const error = errors[getErrorPath([field, index, listField])];\n\n      if (withError && error) {\n        payload.error = error;\n      }\n\n      return payload;\n    }\n\n    return {} as any;\n  };\n\n  return {\n    values,\n    setValues,\n    setFieldValue,\n    errors,\n    setErrors,\n    clearErrors,\n    clearFieldError,\n    setFieldError,\n    setListItem,\n    removeListItem,\n    addListItem,\n    reorderListItem,\n    validate,\n    validateField,\n    onSubmit,\n    reset,\n    getInputProps,\n    getListInputProps,\n  };\n}\n"],"names":[],"mappings":"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"}